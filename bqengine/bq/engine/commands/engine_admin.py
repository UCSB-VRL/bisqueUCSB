###############################################################################
##  Bisque                                                                   ##
##  Center for Bio-Image Informatics                                         ##
##  University of California at Santa Barbara                                ##
## ------------------------------------------------------------------------- ##
##                                                                           ##
##     Copyright (c) 2007,2008,2009,2010,2011                                ##
##     by the Regents of the University of California                        ##
##                            All rights reserved                            ##
##                                                                           ##
## Redistribution and use in source and binary forms, with or without        ##
## modification, are permitted provided that the following conditions are    ##
## met:                                                                      ##
##                                                                           ##
##     1. Redistributions of source code must retain the above copyright     ##
##        notice, this list of conditions, and the following disclaimer.     ##
##                                                                           ##
##     2. Redistributions in binary form must reproduce the above copyright  ##
##        notice, this list of conditions, and the following disclaimer in   ##
##        the documentation and/or other materials provided with the         ##
##        distribution.                                                      ##
##                                                                           ##
##                                                                           ##
## THIS SOFTWARE IS PROVIDED BY <COPYRIGHT HOLDER> ''AS IS'' AND ANY         ##
## EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE         ##
## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR        ##
## PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR           ##
## CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,     ##
## EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,       ##
## PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR        ##
## PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF    ##
## LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING      ##
## NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS        ##
## SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.              ##
##                                                                           ##
## The views and conclusions contained in the software and documentation     ##
## are those of the authors and should not be interpreted as representing    ##
## official policies, either expressed or implied, of <copyright holder>.    ##
###############################################################################
"""
SYNOPSIS
========


DESCRIPTION
===========

"""

import argparse
import os
import posixpath
import sys
import logging
import urlparse
import urllib
import datetime
from paste.deploy import appconfig
from tg import config


try:
    from lxml import etree
except ImportError:
    import xml.etree.ElementTree as etree


#from bq.config.environment import load_environment
from ConfigParser import ConfigParser
#from bq.util import http
from bq.util.configfile import ConfigFile
from bq.util.paths import config_path
from bq.util.commands import find_site_cfg
from bq.util.urlnorm import norm
from bqapi import *
from bq.engine.controllers.module_run import ModuleRunner

logging.basicConfig(level = logging.WARN)


log = logging.getLogger('bq.engine.command.module_admin')

usage = """
%prog module mex_file mex_token 

  mex_file should be a file generated by Module Developer interface at 

  Run test copy of the module 

"""

def error (msg):
    print >>sys.stderr, msg





class engine_admin(object):
    desc = 'engine debuig'
    def __init__(self, version):
        parser = argparse.ArgumentParser( description="Run a debug mex on the engine")
        parser.add_argument('mex_url',  help='Mex tree generated by Bisque Module Developer')
        parser.add_argument('mex_token',  help='Mex token generated by Bisque Module Developer')

        args = parser.parse_args()
        self.mex_url = args.mex_url
        self.mex_token = args.mex_token

    def run(self):

        bq = BQSession().init_mex (mex_url = self.mex_url, token = self.mex_token)

        module_url = bq.mex.type
        print "MODULE", module_url
        module_xml = bq.fetchxml(module_url, view='deep')

        m = ModuleRunner()
        m.main(arguments=["-d", "start"],
               mex_tree=bq.mex.xmltree, 
               module_tree=module_xml, 
               bisque_token = self.mex_token,
               pool = None)
        
